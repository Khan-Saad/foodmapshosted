{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saadkhan/Documents/School/4HC4/foodMaps/food-maps/src/components/Event.js\";\nimport React, { Component } from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nconst btnStyle = {\n  color: '#fff'\n};\nconst [open, setOpen] = React.useState(false);\n\nconst handleClickOpen = () => {\n  setOpen(true);\n};\n\nconst handleClose = () => {\n  setOpen(false);\n};\n\nexport class Event extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoClick = e => {\n      e.preventDefault();\n      console.log(this.props.event.name);\n    };\n\n    this.saveClick = e => {\n      e.preventDefault();\n      console.log(\"clicked save\");\n      this.props.saveEvent(this.props.event);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleClickOpen,\n        children: \"Slide in alert dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: handleClose,\n        \"aria-labelledby\": \"alert-dialog-slide-title\",\n        \"aria-describedby\": \"alert-dialog-slide-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-slide-title\",\n          children: \"Use Google's location service?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-slide-description\",\n            children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: \"Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.event.pic,\n          alt: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: this.props.event.name,\n          subtitle: this.props.event.location,\n          actionIcon: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              style: btnStyle,\n              onClick: this.infoClick,\n              children: \"More Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              style: btnStyle,\n              onClick: this.saveClick,\n              children: \"Add to Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, this.props.event.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Event;","map":{"version":3,"sources":["/Users/saadkhan/Documents/School/4HC4/foodMaps/food-maps/src/components/Event.js"],"names":["React","Component","GridListTile","GridListTileBar","Button","withStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","btnStyle","color","open","setOpen","useState","handleClickOpen","handleClose","Event","infoClick","e","preventDefault","console","log","props","event","name","saveClick","saveEvent","render","Transition","pic","location"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst btnStyle = {\n    color: '#fff',\n}\nconst [open, setOpen] = React.useState(false);\n\nconst handleClickOpen = () => {\n    setOpen(true);\n  };\n\nconst handleClose = () => {\n    setOpen(false);\n  };\n\nexport class Event extends Component {\n    infoClick = (e) => {\n        e.preventDefault();\n        console.log(this.props.event.name)\n    }\n\n    saveClick = (e) => {\n        e.preventDefault();\n        console.log(\"clicked save\")\n        this.props.saveEvent(this.props.event)\n    }\n\n    \n\n\n\n    render() {\n        return (\n\n            <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n            <GridListTile key={this.props.event.name} cols={1}>\n                <img src={this.props.event.pic} alt=\"test\" />\n                \n                <GridListTileBar title={this.props.event.name} subtitle={this.props.event.location}\n                    actionIcon={\n                        <div>\n                        <Button color='secondary' style={btnStyle} onClick={this.infoClick}>More Info</Button>\n                        <Button color='secondary' style={btnStyle} onClick={this.saveClick}>Add to Saved</Button>\n                        </div>\n                    } />\n                </GridListTile>\n                </div>\n        )\n    }\n}\n\nexport default Event\n"]},"metadata":{},"sourceType":"module"}