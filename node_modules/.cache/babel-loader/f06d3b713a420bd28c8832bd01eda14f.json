{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saadkhan/Documents/School/4HC4/foodMaps/food-maps/src/components/Event.js\";\nimport React, { Component } from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport { withStyles } from '@material-ui/core/styles';\nconst btnStyle = {\n  color: '#fff'\n};\nconst modal = {\n  fontSize: \"18px\",\n  background: \"#4050b5\",\n  color: \"white\",\n  textAlign: \"center\"\n};\nconst header = {\n  width: \"100%\",\n  borderBottom: \"1px solid gray\",\n  fontSize: \"18px\",\n  textAlign: \"center\",\n  padding: \"5px\"\n};\nconst content = {\n  width: \"100%\",\n  padding: \"10px 5px\"\n};\nconst actions = {\n  width: \"100%\",\n  padding: \"10px 5px\",\n  margin: \"auto\",\n  textAlign: \"center\"\n};\nconst closed = {\n  cursor: \"pointer\",\n  position: \"absolute\",\n  display: \"block\",\n  padding: \"2px 5px\",\n  lineHeight: \"20px\",\n  right: \"-10px\",\n  top: \"-10px\",\n  fontSize: \"24px\",\n  background: \"#4050b5\",\n  borderRadius: \"18px\",\n  border: \"1px solid #cfcece\"\n};\nexport class Event extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoClick = e => {\n      e.preventDefault();\n      console.log(this.props.event.name);\n    };\n\n    this.saveClick = e => {\n      e.preventDefault();\n      console.log(\"clicked save\");\n      this.props.saveEvent(this.props.event);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(GridListTile, {\n      cols: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.props.event.pic,\n        alt: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n        title: this.props.event.food,\n        subtitle: this.props.event.location,\n        actionIcon: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            trigger: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              style: btnStyle,\n              children: \"More Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 42\n            }, this),\n            modal: true,\n            nested: true,\n            children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal\",\n              style: modal,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close\",\n                onClick: close,\n                style: closed,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header\",\n                style: header,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: this.props.event.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 81\n                }, this), this.props.event.location, \" || \", this.props.event.food, \" || \", this.props.event.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this), this.props.event.details]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"actions\",\n                style: actions,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"button\",\n                  onClick: () => {\n                    console.log('modal closed ');\n                    close();\n                  },\n                  children: \"close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), \");\", /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            style: btnStyle,\n            onClick: this.saveClick,\n            children: \"Add to Saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, this.props.event.food, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Event;","map":{"version":3,"sources":["/Users/saadkhan/Documents/School/4HC4/foodMaps/food-maps/src/components/Event.js"],"names":["React","Component","GridListTile","GridListTileBar","Button","Popup","withStyles","btnStyle","color","modal","fontSize","background","textAlign","header","width","borderBottom","padding","content","actions","margin","closed","cursor","position","display","lineHeight","right","top","borderRadius","border","Event","infoClick","e","preventDefault","console","log","props","event","name","saveClick","saveEvent","render","pic","food","location","close","date","details"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst btnStyle = {\n    color: '#fff',\n}\n\nconst modal = {\n    fontSize: \"18px\",\n    background: \"#4050b5\",\n    color: \"white\",\n    textAlign: \"center\"\n}\n\nconst header = {\n    width: \"100%\",\n    borderBottom: \"1px solid gray\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    padding: \"5px\",\n}\n\nconst content = {\n    width: \"100%\",\n    padding: \"10px 5px\"\n}\n\nconst actions = {\n    width: \"100%\",\n    padding: \"10px 5px\",\n    margin: \"auto\",\n    textAlign: \"center\"\n}\n\nconst closed = {\n    cursor: \"pointer\",\n    position: \"absolute\",\n    display: \"block\",\n    padding: \"2px 5px\",\n    lineHeight: \"20px\",\n    right: \"-10px\",\n    top: \"-10px\",\n    fontSize: \"24px\",\n    background: \"#4050b5\",\n    borderRadius: \"18px\",\n    border: \"1px solid #cfcece\",\n  }\n \nexport class Event extends Component {\n    infoClick = (e) => {\n        e.preventDefault();\n        console.log(this.props.event.name)\n    }\n\n    saveClick = (e) => {\n        e.preventDefault();\n        console.log(\"clicked save\")\n        this.props.saveEvent(this.props.event)\n    }\n\n    render() {\n        return (\n            <GridListTile key={this.props.event.food} cols={1}>\n                <img src={this.props.event.pic} alt=\"test\" />\n\n                <GridListTileBar title={this.props.event.food} subtitle={this.props.event.location}\n                    actionIcon={\n                        <div>\n                            <Popup\n                                trigger={<Button color='secondary' style={btnStyle}>More Info</Button>}\n                                modal\n                                nested>\n\n                                {close => (\n                                    <div className=\"modal\" style={modal}>\n                                        <button className=\"close\" onClick={close} style={closed}>\n                                            &times;\n                                        </button>\n                                        <div className=\"header\" style={header}> <h1>{this.props.event.name}</h1> \n                                        {this.props.event.location} || {this.props.event.food} || {this.props.event.date}\n                                        </div>\n                                        <div className=\"content\">\n                                            {' '}\n                                            <br/>\n                                        {this.props.event.details}\n                                        </div>\n                                        <div className=\"actions\" style={actions}>\n                                            <Button\n                                                className=\"button\"\n                                                onClick={() => {\n                                                    console.log('modal closed ');\n                                                    close();\n                                                }}\n                                            >\n                                                close\n                                                     </Button>\n                                        </div>\n                                    </div>\n                                )}\n                            </Popup>\n);\n                            <Button color='secondary' style={btnStyle} onClick={this.saveClick}>Add to Saved</Button>\n                        </div>\n                    } />\n            </GridListTile>\n        )\n    }\n}\n\nexport default Event\n"]},"metadata":{},"sourceType":"module"}